# sysctl settings are defined through files in
# /usr/lib/sysctl.d/, /run/sysctl.d/, and /etc/sysctl.d/.
#
# Vendors settings live in /usr/lib/sysctl.d/.
# To override a whole file, create a new file with the same in
# /etc/sysctl.d/ and put new settings there. To override
# only specific settings, add a file with a lexically later
# name in /etc/sysctl.d/ and put new settings there.
#
# For more information, see sysctl.conf(5) and sysctl.d(5).

# Speed Up TCP Connections
net.core.somaxconn=65535
net.ipv4.tcp_fastopen=3            # Enable TCP Fast Open (clients + servers)
#net.ipv4.tcp_tw_reuse = 1            # Reuse TIME_WAIT sockets (safe unless NAT is heavy)
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_fin_timeout=10        # Lower FIN timeout, free sockets faster
net.ipv4.tcp_keepalive_time=300    # 5 minutes keepalive
net.ipv4.tcp_keepalive_intvl=60    # 1 min interval between keepalive probes
net.ipv4.tcp_keepalive_probes=5    # 5 probes before killing the connection
net.ipv4.tcp_max_syn_backlog=8192  # Larger backlog for high connection rates
net.ipv4.ip_local_port_range=1024 65000

# SYN Flood and DoS Protection
net.ipv4.tcp_synack_retries=2      # Fewer SYNACK retries
net.ipv4.tcp_retries1=3            # Minor tweak: fast initial retries
net.ipv4.tcp_retries2=8            # Moderate total retries before closing

# Reverse Path Filtering (IP Spoofing Protection)
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.default.rp_filter=1

# ICMP Protection
net.ipv4.icmp_echo_ignore_broadcasts=1
net.ipv4.icmp_ignore_bogus_error_responses=1
net.ipv4.icmp_ratelimit=100        # Rate limit ICMP packets (good against floods)
net.ipv4.icmp_ratemask=88089       # Limit specific ICMP types

# Buffer Size Tuning
net.core.rmem_max=33554432         # 32MB receive buffer max
net.core.wmem_max=33554432         # 32MB send buffer max
net.core.optmem_max=33554432

# Queue Sizes
net.core.netdev_max_backlog=5000   # Increase network device input queue
net.ipv4.tcp_mtu_probing=1         # Enable MTU probing for better efficiency

# TIME_WAIT and Orphans Handling
net.ipv4.tcp_max_orphans=65536     # Allow more orphaned sockets (safe unless memory is tiny)
net.ipv4.tcp_max_tw_buckets=20000  # Allow more TIME_WAIT sockets

# Enable TCP Window Scaling (for better performance over high-latency links)
net.ipv4.tcp_window_scaling=1

fs.protected_fifos=2
fs.protected_hardlinks=1
fs.protected_regular=2
fs.protected_symlinks=1
fs.suid_dumpable=0
kernel.core_uses_pid=1
kernel.ctrl-alt-del=0
kernel.dmesg_restrict=1
kernel.kptr_restrict=2
kernel.perf_event_paranoid=3
kernel.randomize_va_space=2
kernel.sysrq=0
kernel.unprivileged_bpf_disabled=1
kernel.yama.ptrace_scope=1
net.core.bpf_jit_harden=2
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.all.bootp_relay=0
net.ipv4.conf.all.forwarding=0
net.ipv4.conf.all.log_martians=1
net.ipv4.conf.all.proxy_arp=0
net.ipv4.conf.all.send_redirects=0
net.ipv4.conf.default.accept_redirects=0
net.ipv4.conf.default.accept_source_route=0
net.ipv4.conf.default.log_martians=1
net.ipv4.tcp_timestamps=1
net.ipv6.conf.all.accept_redirects=0
net.ipv6.conf.all.accept_source_route=0
net.ipv6.conf.default.accept_redirects=0
net.ipv6.conf.default.accept_source_route=0
dev.tty.ldisc_autoload=0
